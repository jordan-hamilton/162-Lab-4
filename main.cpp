/***********************************************************************************************
** Program name: Lab 4
** Author: Jordan Hamilton
** Date: 10/21/2018
** Description: This information system adds unique pointers to a Student object, an Instructor
** object and a Building object to vector of unique pointers to Person objects and Building
** objects in a University object via addPerson and addBuilding functions. A menu is then
** displayed, allowing the user to choose between displaying all added buildings, all added
** students and instructors, selecting one of the people to perform work, or quitting the
** information system. If the user chooses to select someone to perform work, a menu with
** names of the current objects in the information system are displayed. The user then selects
** a name, and a virtual function displays a message regarding the type of work the person
** completes according to the derived class of the object.
***********************************************************************************************/

#include <iostream>
#include <memory>

#include "Menu.hpp"
#include "Instructor.hpp"
#include "Person.hpp"
#include "Student.hpp"
#include "University.hpp"

using std::move;
using std::unique_ptr;

void addPeopleToMenu();

/***********************************************************************************************
** Description: This program can be run via the lab4 executable generated by make.
***********************************************************************************************/
int main() {

  unsigned seed = time(0);
  srand(seed);

  unique_ptr<Menu> mainMenu(new Menu());

  mainMenu->addMenuItem("View all buildings");
  mainMenu->addMenuItem("View all students and faculty");
  mainMenu->addMenuItem("Select a person to do work");
  mainMenu->addMenuItem("Quit");

  University OSU("Oregon State University");

  unique_ptr<Person> student1(new Student("John Appleseed"));
  unique_ptr<Person> instructor1(new Instructor("Professor Professorson"));
  unique_ptr<Building> building1(new Building("1201 5th St", "Admin Building", 10000));

  OSU.addPerson(move(student1));
  OSU.addPerson(move(instructor1));
  OSU.addBuilding(move(building1));

  switch(mainMenu->getIntChoiceFromPrompt("Select a menu option:", 1, mainMenu->getMenuChoices(), true)) {

    case 1 : OSU.printBuildingInfo();
             break;
    case 2 : OSU.printPeople();
             break;
    case 3 : OSU.pickWorker();
             break;
    default : {}

  }

  return 0;

}
